1382. Balance a Binary Search Tree

class Solution {
public:
    void traverse(vector<int> &inorder,TreeNode* root){
        if(root){
            traverse(inorder,root->left);
            inorder.push_back(root->val);
            traverse(inorder,root->right);
        }
    }
    TreeNode* balance(vector<int> inorder,int low,int high){
        if(low>high)
         return NULL;
            int mid=(low+high)/2;
            TreeNode* curr=new TreeNode(inorder[mid]);
            curr->left=balance(inorder,low,mid-1);
            curr->right=balance(inorder,mid+1,high);
            return curr;
    }
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> inorder;
        traverse(inorder,root);
        int low=0,high=inorder.size()-1;
        TreeNode* r=balance(inorder,low,high);
        return r;
    }
};
